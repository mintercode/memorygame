{"version":3,"sources":["app.js"],"names":["document","addEventListener","cardArray","name","img","sort","Math","random","grid","querySelector","resultDisplay","cardsChosen","cardsChosenId","cardsWon","createBoard","i","length","card","createElement","setAttribute","flipCard","appendChild","checkForMatch","cards","querySelectorAll","optionOneId","optionTwoId","alert","removeEventListener","push","textContent","cardId","getAttribute","setTimeout"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    //card options\n    const cardArray = [\n      {\n        name: 'donny',\n        img: 'images/donny.png'\n      },\n      {\n        name: 'donny',\n        img: 'images/donny.png'\n   \n      },\n      {\n        name: 'pizza',\n        img: 'images/pizza.png'\n      },\n      {\n        name: 'pizza',\n        img: 'images/pizza.png'\n      },\n      {\n        name: 'leo',\n        img: 'images/leo.png'\n      },\n      {\n        name: 'leo',\n        img: 'images/leo.png'\n      },\n      {\n        name: 'mikey',\n        img: 'images/mikey.png'\n      },\n      {\n        name: 'mikey',\n        img: 'images/mikey.png'\n      },\n      \n      {\n        name: 'ralph',\n        img: 'images/ralph.png'\n      },\n      {\n        name: 'ralph',\n        img: 'images/ralph.png'\n      }\n    ]\n  \n    cardArray.sort(() => 0.5 - Math.random())\n  \n    const grid = document.querySelector('.grid')\n    const resultDisplay = document.querySelector('#result')\n    let cardsChosen = []\n    let cardsChosenId = []\n    let cardsWon = []\n  \n    //create your board\n    function createBoard() {\n      for (let i = 0; i < cardArray.length; i++) {\n        const card = document.createElement('img')\n        card.setAttribute('src', 'images/background3.jpeg')\n        card.setAttribute('data-id', i)\n        card.addEventListener('click', flipCard)\n        grid.appendChild(card)\n      }\n    }\n  \n    //check for matches\n    function checkForMatch() {\n      const cards = document.querySelectorAll('img')\n      const optionOneId = cardsChosenId[0]\n      const optionTwoId = cardsChosenId[1]\n      \n      if(optionOneId == optionTwoId) {\n        cards[optionOneId].setAttribute('src', 'images/background3.jpeg')\n        cards[optionTwoId].setAttribute('src', 'images/background3.jpeg')\n        alert('Cowabunga you got a match!')\n      }\n      else if (cardsChosen[0] === cardsChosen[1]) {\n        alert('Cowabunga you got a match!')\n        cards[optionOneId].setAttribute('src', 'images/cowabunga.jpeg')\n        cards[optionTwoId].setAttribute('src', 'images/cowabunga.jpeg')\n        cards[optionOneId].removeEventListener('click', flipCard)\n        cards[optionTwoId].removeEventListener('click', flipCard)\n        cardsWon.push(cardsChosen)\n      } else {\n        cards[optionOneId].setAttribute('src', 'images/background3.jpeg')\n        cards[optionTwoId].setAttribute('src', 'images/background3.jpeg')\n        alert('Sorry dude, shredder wins this one.')\n      }\n      cardsChosen = []\n      cardsChosenId = []\n      resultDisplay.textContent = cardsWon.length\n      if  (cardsWon.length === cardArray.length/2) {\n        resultDisplay.textContent = 'Cowabunga you found them all!'\n      }\n    }\n  \n    //flip your card\n    function flipCard() {\n      let cardId = this.getAttribute('data-id')\n      cardsChosen.push(cardArray[cardId].name)\n      cardsChosenId.push(cardId)\n      this.setAttribute('src', cardArray[cardId].img)\n      if (cardsChosen.length ===2) {\n        setTimeout(checkForMatch, 500)\n      }\n    }\n  \n    createBoard()\n  })\n "]}